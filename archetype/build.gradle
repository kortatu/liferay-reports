buildscript {
    ext {
        springBootVersion = '1.2.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea' 
apply plugin: 'spring-boot'
apply plugin: 'docker'

version = '0.0.1-SNAPSHOT'
jar {
    baseName = 'boot-rest-base'
}
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-hateoas")
    runtime("org.hsqldb:hsqldb")
    testCompile("org.springframework.boot:spring-boot-starter-test") 
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

//Boot plugins
bootRun {
    if ( project.hasProperty('args') ) {
        args project.args.split('\\s+')
    }
}

bootRepackage {
	classifier = 'exe'
}


//Maven 
install {
    repositories.mavenInstaller {
        pom.project {
          parent { 
            groupId 'org.springframework.boot'
            artifactId 'spring-boot-starter-parent'
            version "1.2.2.RELEASE"
          }
        }
    }
}

docker {    
    group 'kortatu'    
    maintainer 'Álvaro González de Paz "alvaro.gonzalez@cgi.com"'
    useApi true
    hostUrl 'http://localhost:4243'
}

distDocker { 
  exposePort 8080 
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
